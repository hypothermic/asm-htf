plugins {
    id 'java'
    id 'maven-publish'
}

configurations {
    bundleOnly
}

group 'nl.hypothermic'
version rootProject.version

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    runtime project(':asm-htf-api')
    implementation project(':asm-htf-api')

    bundleOnly project(':asm-htf-utils')

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
    useJUnitPlatform()
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    manifest {
        attributes (
                'Premain-Class': 'nl.hypothermic.htf.loader.Premain',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true',
                'Can-Set-Native-Method-Prefix': 'true',
                'Specification-Title': rootProject.name,
                'Specification-Version': rootProject.version,
                'Implementation-Title': this.name,
                'Implementation-Version': this.version
        )
    }

    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task bundleJar(type: Jar) {
    manifest {
        attributes (
                'Premain-Class': 'nl.hypothermic.htf.loader.Premain',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true',
                'Can-Set-Native-Method-Prefix': 'true',
                'Specification-Title': rootProject.name,
                'Specification-Version': rootProject.version,
                'Implementation-Title': this.name,
                'Implementation-Version': this.version
        )
    }

    from sourceSets.main.output
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    from configurations.bundleOnly.collect { it.isDirectory() ? it : zipTree(it) }

    archiveBaseName = 'asm-htf-bundle'
}

assemble.dependsOn(bundleJar)

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/hypothermic/asm-htf")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
